From e8835a4631edd6c5a255f3ffea5b6c4969aa7f7c Mon Sep 17 00:00:00 2001
From: Christophe Dumez <christophe.dumez@intel.com>
Date: Tue, 7 Jun 2011 10:50:03 +0300
Subject: [PATCH 1/2] Use Connman.Clock instead of timed to retrieve the
 timezone

This gets rid of the dependency on timed-dev and uses the
net.connman.clock DBus API instead to retrieve the local
timezone name.
---
 debian/control                  |    2 +-
 debian/rules                    |    2 +-
 src/kdedate/ksystemtimezone.cpp |   39 ++++++++++++++-------------------------
 src/src.pro                     |    5 +----
 4 files changed, 17 insertions(+), 31 deletions(-)

diff --git a/debian/control b/debian/control
index 5bf7152..530403d 100644
--- a/debian/control
+++ b/debian/control
@@ -2,7 +2,7 @@ Source: libkcalcoren
 Section: libs
 Priority: optional
 Maintainer: Alvaro Manera <alvaro.manera@nokia.com>
-Build-Depends: debhelper (>= 5), libical-dev (>= 0.43), libqt4-dev (>= 4.5), libsqlite3-dev (>= 3.6.3), uuid-dev, tracker, tzdata, libtimed-dev, libdbus-1-dev, libqmf-dev, libmeegotouch-dev (>= 0.20.12.1-2), doxygen, aegis-builder (>= 1.4)
+Build-Depends: debhelper (>= 5), libical-dev (>= 0.43), libqt4-dev (>= 4.5), libsqlite3-dev (>= 3.6.3), uuid-dev, tracker, tzdata, libdbus-1-dev, libqmf-dev, libmeegotouch-dev (>= 0.20.12.1-2), doxygen, aegis-builder (>= 1.4)
 Standards-Version: 3.8.0
 
 Package: libkcalcoren
diff --git a/debian/rules b/debian/rules
index 4570495..90a7778 100755
--- a/debian/rules
+++ b/debian/rules
@@ -9,7 +9,7 @@
 # Uncomment this to turn on verbose mode.
 #export DH_VERBOSE=1
 
-CFLAGS = -Wall -g -fPIC -DUUID -DMEEGO -DKCALCORE_FOR_MEEGO -DTIMED_SUPPORT -DSYMBIAN_SUPPORT -fvisibility=hidden -fvisibility-inlines-hidden
+CFLAGS = -Wall -g -fPIC -DUUID -DMEEGO -DKCALCORE_FOR_MEEGO -DCONNMAN_SUPPORT -DSYMBIAN_SUPPORT -fvisibility=hidden -fvisibility-inlines-hidden
 CXXFLAGS = -Werror
 
 comma :=,
diff --git a/src/kdedate/ksystemtimezone.cpp b/src/kdedate/ksystemtimezone.cpp
index b2b693c..e5901aa 100644
--- a/src/kdedate/ksystemtimezone.cpp
+++ b/src/kdedate/ksystemtimezone.cpp
@@ -54,9 +54,8 @@
 #include <kconfiggroup.h>
 #include "ktzfiletimezone.h"
 
-#ifdef TIMED_SUPPORT
-#include <timed/wallclock>
-#include <timed/interface>
+#ifdef CONNMAN_SUPPORT
+#include <QtDBus/QDBusInterface>
 #include <QtDBus/QDBusConnection>
 #endif
 
@@ -165,7 +164,7 @@ KTzfileTimeZoneSource *KSystemTimeZonesPrivate::tzfileSource()
 KSystemTimeZones::KSystemTimeZones()
   : d(0)
 {
-#ifndef TIMED_SUPPORT
+#ifndef CONNMAN_SUPPORT
     QDBusConnection dbus = QDBusConnection::sessionBus();
     dbus.connect(QString(), QString(), KTIMEZONED_DBUS_IFACE, "configChanged", this, SLOT(configChanged()));
     dbus.connect(QString(), QString(), KTIMEZONED_DBUS_IFACE, "zonetabChanged", this, SLOT(zonetabChanged(QString)));
@@ -245,7 +244,7 @@ KSystemTimeZonesPrivate *KSystemTimeZonesPrivate::instance()
     if (!m_instance)
     {
         m_instance = new KSystemTimeZonesPrivate;
-#ifndef TIMED_SUPPORT
+#ifndef CONNMAN_SUPPORT
         // A KSystemTimeZones instance is required only to catch D-Bus signals.
         m_parent = new KSystemTimeZones;
         // Ensure that the KDED time zones module has initialized. The call loads the module on demand.
@@ -279,7 +278,7 @@ kDebug(161)<<"instance(): ... initialised";
 
 void KSystemTimeZonesPrivate::readConfig(bool init)
 {
-#ifndef TIMED_SUPPORT
+#ifndef CONNMAN_SUPPORT
     KConfig config(QLatin1String("ktimezonedrc"));
     if (!init)
         config.reparseConfiguration();
@@ -290,26 +289,16 @@ void KSystemTimeZonesPrivate::readConfig(bool init)
 #else
     m_zoneinfoDir = QLatin1String("/usr/share/zoneinfo");
     m_zonetab = QLatin1String("/usr/share/zoneinfo/zone.tab");
-    Maemo::Timed::Interface timed;
-    QDBusReply<Maemo::Timed::WallClock::Info> reply = timed.get_wall_clock_info_sync();
-    if (reply.isValid()) {
-      Maemo::Timed::WallClock::Info info = reply.value();
-      QString localzone = info.etcLocaltime();
-      kDebug() << "localzone" << localzone;
-      // TODO now we have to parse local timezone from symlink, Ilya will 
-      // possibly change this to support previous solution, commented below
-      m_localZoneName = localzone.mid(m_zoneinfoDir.size() + 1);
-
-      //QFile f("/etc/timezone");
-      //if (f.open(QIODevice::ReadOnly)) {
-      //QTextStream str(&f);
-      //m_localZoneName = str.readLine();
-      //f.close();
-      //}
+
+    QDBusInterface connman("net.connman", "/", "net.connman.Clock", QDBusConnection::systemBus());
+    QDBusReply<QVariantMap> reply = connman.call("GetProperties");
+    if (reply.isValid() && !reply.value().value("Timezone").isNull()) {
+      m_localZoneName = reply.value().value("Timezone").toString();
+      kDebug() << "localzone from net.connman.Clock: " << m_localZoneName;
     } else {
 #if !defined(QT_NO_DEBUG_OUTPUT)
-       kError() << "cannot get wall_clock_info (localzone) -" << timed.lastError();
-      // assumption: running timed is not officially supported in scratcbox, 
+       kError() << "cannot get localzone from net.connman.Clock";
+      // assumption: running connmand is not officially supported in a chroot,
       //             getting localzone from /etc/timezone
       kDebug() << "get localzone from /etc/timezone"; 
 #endif
@@ -349,7 +338,7 @@ void KSystemTimeZonesPrivate::setLocalZone()
 
 void KSystemTimeZonesPrivate::cleanup()
 {
-#ifndef TIMED_SUPPORT
+#ifndef CONNMAN_SUPPORT
     delete m_parent;
 #endif
     delete m_instance;
diff --git a/src/src.pro b/src/src.pro
index ce5c160..f03af9d 100644
--- a/src/src.pro
+++ b/src/src.pro
@@ -47,7 +47,7 @@ INCLUDEPATH += . \
 DEFINES += MEEGO \
     UUID \
     KCALCORE_FOR_MEEGO \
-    TIMED_SUPPORT \
+    CONNMAN_SUPPORT \
     KCALCORE_FOR_SYMBIAN
 
 LIBS += -lQtDBus \
@@ -76,9 +76,6 @@ kpimutils.files += klibport/kpimutils/*.h
 pkgconfig.path += /${DESTDIR}/usr/lib/pkgconfig
 pkgconfig.files += ../*.pc
 
-contains (DEFINES, TIMED_SUPPORT) {
-     LIBS += -ltimed
-}
 contains (DEFINES, KCALCORE_FOR_MEEGO) {
     LIBS += -luuid
 }
-- 
1.7.4.4

